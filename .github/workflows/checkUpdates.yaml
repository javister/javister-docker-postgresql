name: Check updates
on:
  schedule:
  - cron: "0 */24 * * *"
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Install xmlstarlet
        run: sudo apt-get install xmlstarlet
      - name: Get the Docker image meta
        run: |
          echo "::set-env name=imageName::javister-docker-docker.bintray.io/javister/$(xmlstarlet sel -N p=http://maven.apache.org/POM/4.0.0 -t -v "/p:project/p:properties/p:docker.image.artifactId" pom.xml)"
          echo "::set-env name=imageTag::$(xmlstarlet sel -N p=http://maven.apache.org/POM/4.0.0 -t -v "/p:project/p:properties/p:revision" pom.xml)"
          echo "::set-env name=doRebuild::false"
          echo "::set-env name=oldImagePresent::false"

      - name: Pull old Docker image v9.5
        run: |
          if docker pull ${imageName}:9.5-${imageTag}; then
              echo "::set-env name=oldImagePresent::true"
          else
              echo "::set-env name=doRebuild::true"
          fi
      - name: Check updates in image v9.5
        if: env.oldImagePresent == 'true'
        run: |
          if [[ "$(docker run --rm ${imageName}:9.5-${imageTag} yum check-update -q | wc --lines)" -gt "3" ]]; then
              echo "::set-env name=doRebuild::true"
          fi

      - name: Pull old Docker image v9.5
        run: |
          if docker pull ${imageName}:9.5-${imageTag}; then
              echo "::set-env name=oldImagePresent::true"
          else
              echo "::set-env name=doRebuild::true"
          fi
      - name: Check updates in image v9.5
        if: env.oldImagePresent == 'true'
        run: |
          if [[ "$(docker run --rm ${imageName}:9.5-${imageTag} yum check-update -q | wc --lines)" -gt "3" ]]; then
              echo "::set-env name=doRebuild::true"
          fi

      - name: Pull old Docker image v9.6
        run: |
          if docker pull ${imageName}:9.6-${imageTag}; then
              echo "::set-env name=oldImagePresent::true"
          else
              echo "::set-env name=doRebuild::true"
          fi
      - name: Check updates in image v9.6
        if: env.oldImagePresent == 'true'
        run: |
          if [[ "$(docker run --rm ${imageName}:9.6-${imageTag} yum check-update -q | wc --lines)" -gt "3" ]]; then
              echo "::set-env name=doRebuild::true"
          fi

      - name: Pull old Docker image v11
        run: |
          if docker pull ${imageName}:11-${imageTag}; then
              echo "::set-env name=oldImagePresent::true"
          else
              echo "::set-env name=doRebuild::true"
          fi
      - name: Check updates in image v11
        if: env.oldImagePresent == 'true'
        run: |
          if [[ "$(docker run --rm ${imageName}:11-${imageTag} yum check-update -q | wc --lines)" -gt "3" ]]; then
              echo "::set-env name=doRebuild::true"
          fi

      - name: Pull old Docker image v12
        run: |
          if docker pull ${imageName}:12-${imageTag}; then
              echo "::set-env name=oldImagePresent::true"
          else
              echo "::set-env name=doRebuild::true"
          fi
      - name: Check updates in image v12
        if: env.oldImagePresent == 'true'
        run: |
          if [[ "$(docker run --rm ${imageName}:12-${imageTag} yum check-update -q | wc --lines)" -gt "3" ]]; then
              echo "::set-env name=doRebuild::true"
          fi

      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        if: env.doRebuild == 'true'
        with:
          java-version: 1.8
          server-id: bintray-javister
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD
      - name: Build and Check
        if: env.doRebuild == 'true'
        run: mvn --no-transfer-progress -Dstyle.color=always verify
        env:
          MAVEN_USERNAME: ${{ secrets.BINTRAY_USER }}
          MAVEN_PASSWORD: ${{ secrets.BINTRAY_PASSWORD }}
          MAVEN_OPTS: -Djansi.force=true
      - name: Login to Bintray Javister
        if: env.doRebuild == 'true'
        run: docker login -u ${{ secrets.BINTRAY_USER }} -p ${{ secrets.BINTRAY_PASSWORD }} javister-docker-docker.bintray.io
      - name: Push Docker image
        if: env.doRebuild == 'true'
        run: mvn --no-transfer-progress -Dstyle.color=always -DforcePush -DskipTests verify
        env:
          MAVEN_USERNAME: ${{ secrets.BINTRAY_USER }}
          MAVEN_PASSWORD: ${{ secrets.BINTRAY_PASSWORD }}
          MAVEN_OPTS: -Djansi.force=true
